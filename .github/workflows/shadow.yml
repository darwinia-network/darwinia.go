# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Golang Shadow

on:
  push:
    branches: [ master, next, cgo ]
  pull_request:
    branches: [ master, next, fix-mmr-proof ]

jobs:
  shadow:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
    steps:

    # Set up golang env
    - name: Set up GO 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    # Checkout Go module directory
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    # Sqlite3 deps
    - name: Environment
      run: |
          export GOPATH=~/go
          mkdir -p ${GOPATH}/src/github.com/darwinia-network
          mv $(cd ../ &&pwd) ${GOPATH}/src/github.com/darwinia-network
          if [[ "$(uname)" == 'Darwin' ]]; then
              brew update
              brew install sqlite3
          else
              sudo apt-get update -y
              sudo apt-get install -y libsqlite3-dev libdbus-1-dev
          fi

    # Cache go modules
    - name: Cache Go Modules
      uses: actions/cache@v1
      env:
        cache-name: cache-go-modules
        lock-file: ${GOPATH}/src/github.com/darwinia-network/shadow/go.sum
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles(${{ env.lock-file }}) }}
          
    # Cache ethash
    - name: Cache Eth Hash
      uses: actions/cache@v1
      env:
        cache-name: cache-eth-hash
      with:
        path: ~/.ethash
        key: ${{ runner.os }}-build-${{ env.cache-name }}

    # Cache MMR Library
    - name: Cache MMR Library
      uses: actions/cache@v1
      env:
        cache-name: mmr-cache
        lock-file: ${GOPATH}/src/github.com/darwinia-network/shadow/Cargo.lock
      with:
        path: ${GOPATH}/src/github.com/darwinia-network/shadow/target
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles(${{ env.lock-file }}) }}

    # Get deps
    - name: Get dependencies
      run:  go mod download
      working-directory: ${GOPATH}/src/github.com/darwinia-network/shadow

    # Build packages
    - name: Build
      run: make
      working-directory: ${GOPATH}/src/github.com/darwinia-network/shadow
    
    # Trigger api tests when merge
    - name: Test shadow API
      env:
        INFURA_KEY: ${{ secrets.INFURA_KEY }}
      working-directory: ${GOPATH}/src/github.com/darwinia-network/shadow
      run: go test -v ./...
