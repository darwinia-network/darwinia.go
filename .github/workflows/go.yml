# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Golang CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      tests-root: ./tests
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
    steps:
    # Set up golang env
    - name: Set up GO 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    # Checkout Go module directory
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    # Cache go modules
    - name: Cache Go Modules
      uses: actions/cache@v1
      env:
        cache-name: cache-go-modules
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-
          ${{ runner.os }}-
          
    # Cache eth hash
    - name: Cache Eth Hash
      uses: actions/cache@v1
      env:
        cache-name: cache-eth-hash
      with:
        path: ~/.ethash
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    # Cache eth hash proof
    - name: Cache Eth Hash Proof
      uses: actions/cache@v1
      env:
        cache-name: cache-eth-hash-proof
      with:
        path: ~/.ethashproof
        key: ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: |
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    
    # Get deps
    - name: Get dependencies
      run:  go mod download

    # Build packages
    - name: Build
      run: make
    
    # Trigger api tests when merge
    - name: Test shadow API
      env:
        INFURA_KEY: ${{ secrets.INFURA_KEY }}
      run: go test ./...
      working-directory: ${{ env.tests-root }}
